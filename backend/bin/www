#!/usr/bin/env node

const { port } = require('../config');
const { createServer } = require('http');
const app = require('../app');
const db = require('../db/models');
const WebSocket = require('ws');

const server = createServer(app);

const ws = new WebSocket.Server({ server });

console.log('WS CONSOLE LOG', ws);

// I'm maintaining all active connections in this object
// const clients = {};

// const getUniqueID = () => {
//   const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
//   return s4() + s4() + '-' + s4();
// };

ws.on('connection', (ws, request, client) => {
  console.log('WS CONNECTED');
  ws.on('message', (jsonData) => {
    console.log('MESSAGE SENT');
    const message = JSON.parse(jsonData);
    const chatMessage = message.data;

    const addChatMessage = {
      type: 'add-chat-message',
      data: chatMessage,
    };

    const jsonAddChatMessage = JSON.stringify(addChatMessage);
    console.log(`Sending message**** ${jsonAddChatMessage}`);

    console.log('Clients****', ws.clients)

    ws.clients.forEach((client) => {
      //Ready states include:
      //CONNECTING, OPEN, CLOSING, CLOSED
      console.log('client ready state ', client.readyState, 'client id', client);
      console.log('client**** ', client);
      console.log('CLIENT RECIPIENT ', client.username);
      if (client.readyState === WebSocket.OPEN) {
        console.log('message sent:', jsonAddChatMessage);
        client.send(jsonAddChatMessage);
      }
    });
  });
  ws.on('close', (event) => {
    console.log(event);
  })
});

// Check the database connection before starting the app
db.sequelize
  .authenticate()
  .then(() => {
    console.log('Database connection success! Sequelize is ready to use...');

    // Start listening for connections
    server.listen(port, () => console.log(`Listening on port ${port}...`));
  })
  .catch((err) => {
    console.log('Database connection failure.');
    console.error(err);
  });
